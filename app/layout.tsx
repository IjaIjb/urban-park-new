
import type { Metadata } from "next";
// import { Inter } from "next/font/google";
import "./globals.css";
import localfont from "next/font/local";
import Head from "next/head";
import StoreProvider from "@/store/redux/storeProvider";

// const inter = Inter({ subsets: ["latin"] });

const creatoDisplay = localfont({
  src: [
    {
      path: "./fonts/CreatoDisplay-Bold.otf",
      weight: "700",
      style: "extrabold",
    },

    {
      path: "./fonts/CreatoDisplay-Bold.otf",
      weight: "700",
      style: "bold",
    },

    {
      path: "./fonts/CreatoDisplay-Regular.otf",
      weight: "100",
      style: "normal",
    },

    {
      path: "./fonts/CreatoDisplay-Medium.otf",
      weight: "400",
      style: "medium",
    },

    {
      path: "./fonts/CreatoDisplay-Regular.otf",
      weight: "300",
      style: "semi-bold",
    },

    {
      path: "./fonts/CreatoDisplay-Thin.otf",
      weight: "100",
      style: "light",
    },
  ],
  variable: "--font-creato-display",
});

export const metadata: Metadata = {
  title: "Urban",
  description: "Urban park",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <Head>
        <link
          href="https://fonts.cdnfonts.com/css/creato-display"
          rel="stylesheet"
        />
        <link
          href="https://unpkg.com/aos@2.3.1/dist/aos.css"
          rel="stylesheet"
        ></link>
      </Head>
      <body className={creatoDisplay.className}><StoreProvider>{children}</StoreProvider></body>
    </html>
  );
}




// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
